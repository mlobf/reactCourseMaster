----------------------------------------------------------------------------------------------------
										How to use NPM or YARN
----------------------------------------------------------------------------------------------------
NPM vs YARN
Throughout the course we will be using Yarn, however using NPM or Yarn is a personal choice. 
You can use this as a reference guide for the two different commands you can use. 
Don't worry if you are not sure of the below commands as we will explore them throughout the course:
Install dependencies from package.json: npm install == yarn
Install a package and add to package.json: npm install package --save == yarn add package
Install a devDependency to package.json: npm install package --save-dev == yarn add package --dev
Remove a dependency from package.json: npm uninstall package --save == yarn remove package
Upgrade a package to its latest version: npm update --save == yarn upgrade
Install a package globally: npm install package -g == yarn global add package
----------------------------------------------------------------------------------------------------
->To Create a React App
npx create-react-app put_here_your_app's_name
----------------------------------------------------------------------------------------------------
React works replace the original DOM with REACT Dom.
----------------------------------------------------------------------------------------------------
React project Setup
----------------------------------------------------------------------------------------------------
Hooks is a new way to create React components.
 Classes is the traditional way to create thoose components, 
----------------------------------------------------------------------------------------------------
Write Classes that return html as functions does the same.
	But Classes have more funtionality then functions.

To write a Class , first import  components inside App.js.
Using a Class is granted access to 'State'
State is a js object with properties that can be access inside App.
----------------------------------------------------------------------------------------------------
Jsx
	using { } to insert js expressions
----------------------------------------------------------------------------------------------------
Fetch the content,
	LifeCycleMethods,
		-> Methods that are called at different stages of when this component gets rendered.
	
----------------------------------------------------------------------------------------------------





